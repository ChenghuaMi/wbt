// Code generated by goctl. DO NOT EDIT.
package types

type CommonReply struct {
	Code int64       `json:"code"`
	Msg  string      `json:"msg"`
	Data interface{} `json:"data"`
}

type LoginReq struct {
	Username string `form:"username"`
	Password string `form:"password"`
}

type LoginReply struct {
	Id           int64   `json:"id"`
	Username     string  `json:"username"`
	TotalMoney   float64 `json:"totalMoney"`
	UseMoney     float64 `json:"useMoney"`
	Money        float64 `json:"money"`
	TotalScore   float64 `json:"totalScore"`
	UseScore     float64 `json:"useScore"`
	Score        float64 `json:"score"`
	AccessToken  string  `json:"accessToken"`
	AccessExpire int64   `json:"accessExpire"`
	RefreshAfter int64   `json:"refreshAfter"`
}

type RegisterReq struct {
	Username    string `form:"username"`
	Password    string `form:"password"`
	Status      byte   `form:"status,optional"`
	CreatedTime int64  `form:"createdTime,optional"`
	UpdatedTime int64  `form:"updatedTime,optional"`
}

type RegisterReply struct {
	Code int64  `json:"code"`
	Msg  string `json:"msg"`
	Ok   bool   `json:"ok"`
}

type CreateOrderReq struct {
	Type  byte    `form:"type,options=1|2"`
	Price float64 `form:"price"`
	Num   int64   `form:"num"`
}

type CreateOrderReply struct {
	OrderId int64 `json:"orderId"`
}

type OrderListReq struct {
	Type byte  `form:"type,options=1|2"`
	Page int64 `form:"page,default=1"`
}

type OrderListReply struct {
	OrderList []OrderList `json:"orderList"`
	PageList  PageList    `json:"pageList"`
}

type OrderList struct {
	Id          int64   `json:"id"`
	Type        byte    `json:"type"`
	OrderNo     string  `json:"orderNo"`
	Price       float64 `json:"price"`
	Num         int64   `json:"num"`
	UserId      int64   `json:"userId"`
	Status      byte    `json:"status"`
	CreatedTime int64   `json:"createdTime"`
	UpdatedTime int64   `json:"updatedTime"`
}

type PageList struct {
	Total    int64 `json:"total"`
	Page     int64 `json:"page"`
	PageSize int64 `json:"pageSize"`
}
